import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";
import { AuthProvider } from "./provider";

const SFProRounded = localFont({
  src: [
    { path: "./fonts/SF-Pro-Rounded-Regular.otf", weight: "400" },
    { path: "./fonts/SF-Pro-Rounded-Medium.otf", weight: "500" },
    { path: "./fonts/SF-Pro-Rounded-Bold.otf", weight: "600" },
  ],
  variable: "--font-SF-Rrounded",
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${SFProRounded.variable}`}
      >
        <AuthProvider>{children}</AuthProvider>
      </body>
    </html>
  );
}
